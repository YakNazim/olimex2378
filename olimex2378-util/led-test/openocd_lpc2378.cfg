# Configuration for the LPC2378, ARM-USB-OCD, and openocd v> 1257 < ?
#

if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
  # force an error till we get a good number
   set _CPUTAPID 0x4f1f0f0f 
}

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME psas
}

if { [info exists ENDIAN] } {
   set  _ENDIAN $ENDIAN
} else {
   set  _ENDIAN little
}

#delays on reset lines
jtag_nsrst_delay 200
jtag_ntrst_delay 200


# NOTE!!! LPCs need reset pulled while RTCK is low. 0 to activate 
# JTAG, power-on reset is not enough, i.e. you need to perform a
# reset before being able to talk to the LPC2148, attach is not
# possible.

#use combined on interfaces or targets that can't set TRST/SRST separately
reset_config trst_and_srst srst_pulls_trst


#flash bank lpc2000 <base> <size> 0 0 <target#> <variant>
#flash bank lpc2000 0x0 0x7d000 0 0 0 lpc2000_v2 14765

#----------- Daemon Configuration

tcl_port        6666
telnet_port     4444
gdb_port        3333


# Tell gdb that you can use us to program the device (requires GDB >=6.7 and libexapt)
gdb_memory_map    enable
gdb_flash_program enable

#----------- JTAG Interface Type
source [find interface/olimex-arm-usb-ocd.cfg]

#JTAG chain: [IR length] [IR Capture] [IR mask] [IDCODE Inst.]
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

jtag_khz      1000
# might be too fast...
#jtag_khz      5000

# We have separated JTAG and LPC resets, but the LPC reset resets the JTAG reset
reset_config  trst_and_srst  srst_pulls_trst 

#----------- FT2232 Options

ft2232_device_desc "Olimex OpenOCD JTAG A"  # Only for FTD2XX drivers: changed from  "... JTAG A" to "... JTAG" - why?
ft2232_layout      "olimex-jtag"
ft2232_vid_pid     0x15BA  0x0003

#-------- Target Configuration

#target [type]   [endian] [reset mode]  [chainpos] [variant]
target create $_CHIPNAME arm7tdmi -endian little   -chain-position $_CHIPNAME.cpu -variant arm7tdmi-s_r4  -work-area-phys 0x40000000  -work-area-size 0x8000

# set _TARGETNAME [format "%s.cpu" $_CHIPNAME]

$_CHIPNAME configure -work-area-virt 0 -work-area-phys 0x40000000 -work-area-size 0x4000 -work-area-backup 0
$_CHIPNAME configure -event reset-init {
        # Force target into ARM state
         soft_reset_halt
        #do not remap 0x0000-0x0020 to anything but the flash
         mwb 0xE01FC040 0x01
 }

# Force everything to use hardware breakpoints since we're debugging from flash
#arm7_9 force_hw_bkpts enable
gdb_breakpoint_override enable

#-------- Flash configuration

#LPC2148 @ 12MHz / 0x80000 from 512*1024...plus/minus 1 issue, lets not push it.
# 0x0008 0000 is reserved address...
#flash bank [driver] [base] [size]  [chip_width] [bus_width] [target#] [variant]  [freq] [cksum]
flash  bank lpc2000  0      0x80000 0            0           0         lpc2000_v2 12000  calc_checksum

